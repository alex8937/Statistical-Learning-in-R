maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist))
}
plot(seq(2,20,2), sdlist)
n^2
n
m = 10000
n = 2
sdlist = c()
for(n in seq(2,20,2)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist) * n^2)
}
plot(seq(2,20,2), sdlist)
m = 10000
n = 2
sdlist = c()
for(n in seq(2,20,2)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist) * n^2/(n+1))
}
plot(seq(2,20,2), sdlist)
m = 10000
n = 2
sdlist = c()
for(n in seq(2,20,2)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist) * n)
}
plot(seq(2,20,2), sdlist)
m = 10000
n = 2
sdlist = c()
for(n in seq(2,20,2)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist) * sqrt(n))
}
plot(seq(2,20,2), sdlist)
m = 10000
n = 2
sdlist = c()
for(n in seq(2,20,2)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist))
}
plot(seq(2,20,2), sdlist)
m = 10000
n = 2
sdlist = c()
for(n in seq(2,20,2)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n))
}
plot(seq(2,20,2), sdlist)
m = 10000
n = 2
sdlist = c()
for(n in seq(2,20,2)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n^2/(n+1)))
}
plot(seq(2,20,2), sdlist)
m = 10000
n = 2
sdlist = c()
for(n in seq(2,40,2)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n^2/(n+1)))
}
plot(seq(2,40,2), sdlist)
m = 10000
n = 2
sdlist = c()
for(n in seq(2,40,4)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n^2/(n+1)))
}
plot(seq(2,40,4), sdlist)
m = 10000
n = 2
sdlist = c()
for(n in seq(2,80,4)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n^2/(n+1)))
}
plot(seq(2,80,4), sdlist)
m = 10000
n = 2
sdlist = c()
for(n in seq(2,80,4)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n^2/(n+1)))
}
plot(seq(2,80,4), sdlist, xlab = 'n')
m = 10000
n = 2
sdlist = c()
for(n in seq(2,80,4)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n))
}
plot(seq(2,80,4), sdlist, xlab = 'n')
m = 10000
n = 2
sdlist = c()
for(n in seq(2,80,4)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - 0)) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n))
}
plot(seq(2,80,4), sdlist, xlab = 'n')
m = 10000
n = 2
sdlist = c()
for(n in seq(2,80,4)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - 10)) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n))
}
plot(seq(2,80,4), sdlist, xlab = 'n')
m = 100
n = 2
sdlist = c()
for(n in seq(2,80,4)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n))
}
plot(seq(2,80,4), sdlist, xlab = 'n')
m = 100
n = 2
sdlist = c()
for(n in seq(2,80,4)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n^2/(n+1)))
}
plot(seq(2,80,4), sdlist, xlab = 'n')
m = 100
n = 2
sdlist = c()
for(n in seq(2,80,4)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n^2/(n+1)))
}
plot(seq(2,80,4), sdlist, xlab = 'n')
m = 1000
n = 2
sdlist = c()
for(n in seq(2,80,4)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n^2/(n+1)))
}
plot(seq(2,80,4), sdlist, xlab = 'n')
m = 1000
n = 2
sdlist = c()
for(n in seq(2,80,4)){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n))
}
plot(seq(2,80,4), sdlist, xlab = 'n')
m = 1000
nlist = seq(2,200,10)
sdlist = c()
for(n in nlist){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n))
}
plot(nlist, sdlist, xlab = 'n')
m = 1000
nlist = seq(2,2000,10)
sdlist = c()
for(n in nlist){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n))
}
plot(nlist, sdlist, xlab = 'n')
m = 1000
nlist = seq(2,2000,50)
sdlist = c()
for(n in nlist){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n))
}
plot(nlist, sdlist, xlab = 'n')
m = 1000
nlist = seq(2,2000,50)
sdlist = c()
for(n in nlist){
maelist = c()
print(n)
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist)*sqrt(n))
}
plot(nlist, sdlist, xlab = 'n', ylab = 'sd*sqrt(n)'
)
m = 1000
nlist = seq(2,2000,50)
sdlist = modsdlist = c()
for(n in nlist){
maelist = c()
for(i in 1:m) {
xlist <- rnorm(n, mean = 10, sd = 1)
mae = sum(abs(xlist - mean(xlist))) / length(xlist)
maelist = c(maelist, mae)
}
sdlist = c(sdlist, sd(maelist))
modsdlist = c(modsdlist, sd(maelist)*sqrt(n))
}
plot(nlist, sdlist, xlab = 'n', ylab = 'sd')
plot(nlist, modsdlist, xlab = 'n', ylab = 'sd*sqrt(n)')
### vectors, data, matrices, subsetting
x=c(2,7,5)
x
y=seq(from=4,length=3,by=3)
?seq
y
x+y
x/y
x^y
x[2]
x[2:3]
x[-2]
?mfrow
?par
pwd()
getpwd()
getwd()
Auto=read.csv("../Auto.csv")
Auto=read.csv("../Auto.csv")
Auto=read.csv("../Auto.csv")
?detach
q()
?rnorm
x = rnorm(100, mean = 5, sd = 4)
x = rnorm(100, mean = 5, sd = 4)
y = rnorm(50, mean = 2, sd = 16)
plot(x, y)
x = rnorm(100, mean = 5, sd = 4)
y = rnorm(100, mean = 2, sd = 16)
plot(x, y)
x = rnorm(100, mean = 5, sd = 2)
y = rnorm(100, mean = 2, sd = 16)
plot(x, y)
x = rnorm(1000, mean = 5, sd = 2)
y = rnorm(1000, mean = 2, sd = 16)
plot(x, y)
x = rnorm(1000, mean = 5, sd = 4)
y = rnorm(1000, mean = 2, sd = 16)
plot(x, y)
?plot
x = rnorm(1000, mean = 5, sd = 4)
y = rnorm(1000, mean = 2, sd = 16)
plot(x, y, asp = 1)
x = rnorm(1000, mean = 25, sd = 4)
y = rnorm(1000, mean = 17, sd = 16)
plot(x, y, asp = 1)
x = rnorm(1000, mean = 25, sd = 4)
y = rnorm(1000, mean = 80, sd = 16)
plot(x, y, asp = 1)
?matrix
matrix(c(x, y), nrow = 2, ncol = 1)
matrix(c(x, y), nrow = 2, ncol = 100)
x
matrix(c(x, y), nrow = 2, ncol = 100, byrow = T)
dt = matrix(c(x, y), nrow = 2, ncol = 100, byrow = T)
dt
plot(dt)
sin(30)
sin(30/(2*pi))
sin(30/(180)*pi)
rotation = matrix(c(cos(theta), sin(theta), -sin(theta), cos(theta)), 2, 2)
theta = 30 / 180 * pi
rotation = matrix(c(cos(theta), sin(theta), -sin(theta), cos(theta)), 2, 2)
dt * rotation
rotation * dt
rotation * transpose(dt)
dim(dt)
plot(dt[1], dt[2])
dt[1]
dt
plot(dt)
dt[1,]
plot(dt[1,], dt[2,])
plot(dt[1,], dt[2,], asp = 1)
x = rnorm(1000, mean = 25, sd = 4)
y = rnorm(1000, mean = 80, sd = 16)
plot(x, y, asp = 1)
theta = 30 / 180 * pi
rotation = matrix(c(cos(theta), sin(theta), -sin(theta), cos(theta)), 2, 2)
dt = matrix(c(x, y), nrow = 2, ncol = 1000, byrow = T)
plot(dt[1,], dt[2,], asp = 1)
rotation %*% dt
rotation
dim(rotation %*% dt)
dt.new <- rotation %*% dt
plot(dt.ew[1,], dt.new[2,], asp = 1)
plot(dt.new[1,], dt.new[2,], asp = 1)
x = rnorm(1000, mean = 25, sd = 4)
y = rnorm(1000, mean = 80, sd = 16)
plot(x, y, asp = 1)
theta = 30 / 180 * pi
rotation = matrix(c(cos(theta), -sin(theta), sin(theta), cos(theta)), 2, 2)
dt = matrix(c(x, y), nrow = 2, ncol = 1000, byrow = T)
plot(dt[1,], dt[2,], asp = 1)
dt.new <- rotation %*% dt
plot(dt.new[1,], dt.new[2,], asp = 1)
?normalization
normalization <- function(x) {(x - mean(x)) / sd(x)}
normalization <- function(x) {(x - mean(x)) / sd(x)}
plot(normalization(dt.new[1,]), normalization(dt.new[2,]), asp = 1)
x = rnorm(10000, mean = 25, sd = 4)
y = rnorm(10000, mean = 80, sd = 16)
plot(x, y, asp = 1)
theta = 30 / 180 * pi
rotation = matrix(c(cos(theta), -sin(theta), sin(theta), cos(theta)), 2, 2)
dt = matrix(c(x, y), nrow = 2, ncol = 10000, byrow = T)
plot(dt[1,], dt[2,], asp = 1)
dt.new <- rotation %*% dt
plot(dt.new[1,], dt.new[2,], asp = 1)
normalization <- function(x) {(x - mean(x)) / sd(x)}
plot(normalization(dt.new[1,]), normalization(dt.new[2,]), asp = 1)
x = rnorm(10000, mean = 25, sd = 4)
y = rnorm(10000, mean = 80, sd = 16)
plot(x, y, asp = 1)
theta = 30 / 180 * pi
rotation = matrix(c(cos(theta), -sin(theta), sin(theta), cos(theta)), 2, 2)
dt = matrix(c(x, y), nrow = 2, ncol = 10000, byrow = T)
plot(dt[1,], dt[2,], asp = 1)
dt.new <- rotation %*% dt
plot(dt.new[1,], dt.new[2,], asp = 1)
normalization <- function(x) {x / sd(x)}
plot(normalization(dt.new[1,]), normalization(dt.new[2,]), asp = 1)
x = rnorm(10000, mean = 25, sd = 4)
y = rnorm(10000, mean = 80, sd = 160)
plot(x, y, asp = 1)
theta = 30 / 180 * pi
rotation = matrix(c(cos(theta), -sin(theta), sin(theta), cos(theta)), 2, 2)
dt = matrix(c(x, y), nrow = 2, ncol = 10000, byrow = T)
plot(dt[1,], dt[2,], asp = 1)
dt.new <- rotation %*% dt
plot(dt.new[1,], dt.new[2,], asp = 1)
normalization <- function(x) {x / sd(x)}
plot(normalization(dt.new[1,]), normalization(dt.new[2,]), asp = 1)
x = rnorm(10000, mean = 25, sd = 4)
y = rnorm(10000, mean = 80, sd = 16)
plot(x, y, asp = 1)
theta = 30 / 180 * pi
rotation = matrix(c(cos(theta), -sin(theta), sin(theta), cos(theta)), 2, 2)
dt = matrix(c(x, y), nrow = 2, ncol = 10000, byrow = T)
plot(dt[1,], dt[2,], asp = 1)
dt.new <- rotation %*% dt
plot(dt.new[1,], dt.new[2,], asp = 1)
normalization <- function(x) {x / sd(x)}
plot(normalization(dt.new[1,]), normalization(dt.new[2,]), asp = 1)
Model Selection
================
This is an R Markdown document. Markdown is a simple formatting syntax for authoring web pages,
and a very nice way of distributing an analysis. It has some very simple syntax rules.
```{r}
library(ISLR)
summary(Hitters)
```
There are some missing values here, so before we proceed we will remove them:
```{r}
Hitters=na.omit(Hitters)
with(Hitters,sum(is.na(Salary)))
```
load('7.R,RData')
load('~\7.R,RData')
load('~/7.R,RData')
load('~/7.R.RData')
load('7.R.RData')
setwd("C:/Users/Chen/Desktop/Repository/Statistical-Learning-in-R")
load('7.R.RData')
plot(x, y)
lm(y~x)
lm(y~1+x+I(x^2))
